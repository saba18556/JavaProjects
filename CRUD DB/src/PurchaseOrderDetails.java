
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Saba Fatima
 */
public class PurchaseOrderDetails extends javax.swing.JFrame {

    /**
     * Creates new form PurchaseOrderDetails
     */
    public PurchaseOrderDetails() {
        initComponents();
    }
    
     String driver = "oracle.jdbc.OracleDriver";
    String url = "jdbc:oracle:thin:@localhost:1521:ORCL";
    String user = "system";
    String password = "OracleUser";
    
    //Statement st;
    ResultSet rs;
    PreparedStatement pst;
    Connection con;
    
    public void tableupdate() throws SQLException {
        
        int c;
        try {
            Class.forName(driver);
             con = DriverManager.getConnection(url, user, password);
             
             pst = con.prepareStatement("select * from PO_LINE");
            ResultSet rs = pst.executeQuery();
            
            ResultSetMetaData rsd = rs.getMetaData();
            c = rsd.getColumnCount();
            DefaultTableModel dft = (DefaultTableModel)polTable.getModel();
            dft.setRowCount(0);
            
            while(rs.next()){
                
                Vector v2 = new Vector();
                for(int i=1;i<c;i++){
                    
                    v2.add(rs.getString("PONR"));
                    v2.add(rs.getString("PRODNR"));
                    v2.add(rs.getString("QUANTITY"));
                    
                }
                dft.addRow(v2);
            }
             
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(PurchaseOrderDetails.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        ponr_field = new javax.swing.JTextField();
        prodnr_field = new javax.swing.JTextField();
        quan_field = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        polTable = new javax.swing.JTable();
        insertBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        delBtn = new javax.swing.JButton();
        CloseBtn = new javax.swing.JButton();
        readBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("PURCHASE ORDER DETAILS");

        jLabel2.setText("Order Num");

        jLabel3.setText("Prod Num");

        jLabel4.setText("Quantity");

        prodnr_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prodnr_fieldActionPerformed(evt);
            }
        });

        polTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "P.Order Number", "Product Number", "Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        polTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                polTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(polTable);

        insertBtn.setText("Insert");
        insertBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertBtnActionPerformed(evt);
            }
        });

        updateBtn.setText("Update");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        delBtn.setText("Delete");
        delBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delBtnActionPerformed(evt);
            }
        });

        CloseBtn.setText("Close");
        CloseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseBtnActionPerformed(evt);
            }
        });

        readBtn.setText("Read");
        readBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                readBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(169, 169, 169)
                .addComponent(jLabel1)
                .addGap(58, 58, 58))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(updateBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(delBtn))
                    .addComponent(prodnr_field)
                    .addComponent(ponr_field)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(quan_field, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(insertBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(46, 46, 46)
                                .addComponent(readBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CloseBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(57, 57, 57))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 5, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(ponr_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(prodnr_field, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(quan_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(insertBtn)
                            .addComponent(readBtn)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(delBtn)
                    .addComponent(CloseBtn)
                    .addComponent(updateBtn))
                .addGap(60, 60, 60))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void prodnr_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prodnr_fieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_prodnr_fieldActionPerformed

    private void insertBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertBtnActionPerformed
        // TODO add your handling code here:
        int ponr, prodnr, quantity;
        
        ponr = Integer.valueOf(ponr_field.getText());
        prodnr = Integer.valueOf(prodnr_field.getText());
        quantity =  Integer.valueOf(quan_field.getText());
        
        try {
            // TODO add your handling code here:
            Class.forName(driver);
            con = DriverManager.getConnection(url, user, password);
            pst = con.prepareStatement("insert into PO_LINE (PONR,PRODNR,QUANTITY)values(?,?,?)");
            pst.setInt(1, ponr);
            pst.setInt(2, prodnr);
            pst.setInt(3, quantity);
            pst.executeUpdate();
            JOptionPane.showMessageDialog(this,"RECORD ADDED!");
            
            
            ponr_field.setText("");
            prodnr_field.setText("");
            quan_field.setText("");
            ponr_field.requestFocus();
            tableupdate();
        } catch (Exception ex) {
            Logger.getLogger(PurchaseOrderDetails.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_insertBtnActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        // TODO add your handling code here:
         DefaultTableModel model = (DefaultTableModel)polTable.getModel();
        int selectedIndex = polTable.getSelectedRow();
        
        int ponr, prodnr, quantity;
        
        ponr = Integer.valueOf(ponr_field.getText());
        prodnr =  Integer.valueOf(prodnr_field.getText());
        quantity = Integer.valueOf(quan_field.getText());
       
        
        try {
            
            Class.forName(driver);
            con = DriverManager.getConnection(url, user, password);
            
            pst = con.prepareStatement("update PO_LINE set QUANTITY=?  where PONR=? and PRODNR = ?");
            
            pst.setInt(1, quantity);
            pst.setInt(2, ponr);
            pst.setInt(3, prodnr);
            
            pst.executeUpdate();
            JOptionPane.showMessageDialog(this,"RECORD UPDATED!");
            
            ponr_field.setText("");
            prodnr_field.setText("");
            quan_field.setText("");
            ponr_field.requestFocus();
            tableupdate();
            
        } catch (ClassNotFoundException | SQLException ex) {
            
            Logger.getLogger(PurchaseOrderDetails.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex);
            
        }
    }//GEN-LAST:event_updateBtnActionPerformed

    private void delBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delBtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel)polTable.getModel();
        int selectedIndex = polTable.getSelectedRow();
        
        int ponr = Integer.parseInt(model.getValueAt(selectedIndex, 0).toString());
        int prodnr = Integer.parseInt(model.getValueAt(selectedIndex, 1).toString());
        
        int dialogresult = JOptionPane.showConfirmDialog(null,"Do you want to delete the record","WARNING!",JOptionPane.YES_NO_OPTION);
        
        if (dialogresult ==JOptionPane.YES_OPTION){
            
            try {
                
                Class.forName(driver);
                 con= DriverManager.getConnection(url, user, password);
            
            pst = con.prepareStatement("delete from PO_LINE where PONR = ? and PRODNR=?");
            
            pst.setInt(1, ponr);
            pst.setInt(2, prodnr);
            pst.executeUpdate();
            JOptionPane.showMessageDialog(this,"RECORD DELETED!");
            tableupdate();
             ponr_field.setText("");
            prodnr_field.setText("");
            quan_field.setText("");
            ponr_field.requestFocus();
            } 
            
            catch (ClassNotFoundException | SQLException ex) {
                
                Logger.getLogger(PurchaseOrderDetails.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_delBtnActionPerformed

    private void polTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_polTableMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) polTable.getModel();
        int selectedIndex = polTable.getSelectedRow();
        
        ponr_field.setText(model.getValueAt(selectedIndex,0).toString());
        prodnr_field.setText(model.getValueAt(selectedIndex,1).toString());
        quan_field.setText(model.getValueAt(selectedIndex,2).toString());
    }//GEN-LAST:event_polTableMouseClicked

    private void CloseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseBtnActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_CloseBtnActionPerformed

    private void readBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_readBtnActionPerformed
        try {
            // TODO add your handling code here:
            tableupdate();
        } catch (SQLException ex) {
            Logger.getLogger(PurchaseOrderDetails.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_readBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PurchaseOrderDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PurchaseOrderDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PurchaseOrderDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PurchaseOrderDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PurchaseOrderDetails().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CloseBtn;
    private javax.swing.JButton delBtn;
    private javax.swing.JButton insertBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable polTable;
    private javax.swing.JTextField ponr_field;
    private javax.swing.JTextField prodnr_field;
    private javax.swing.JTextField quan_field;
    private javax.swing.JButton readBtn;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
